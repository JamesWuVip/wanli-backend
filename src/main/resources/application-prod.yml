# Production环境配置
# 服务器配置
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never

spring:
  application:
    name: wanli-backend-production
  
  # 数据源配置 - Railway PostgreSQL Production
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/wanli_backend_prod}
    username: ${SPRING_DATASOURCE_USERNAME:prod_user}
    password: ${SPRING_DATASOURCE_PASSWORD:prod_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 30
      minimum-idle: 10
      leak-detection-threshold: 60000
      connection-test-query: SELECT 1
      
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: Asia/Shanghai
          batch_size: 20
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: true
          use_query_cache: true
  
  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false

# JWT配置
jwt:
  secret: ${JWT_SECRET:productionSecretKeyForWanliEducationBackendSystem2024}
  access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600000}
  refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:7200000}

# 日志配置
logging:
  level:
    com.wanli: info
    org.springframework.web: warn
    org.springframework.security: warn
    org.hibernate.SQL: warn
    org.hibernate.type.descriptor.sql.BasicBinder: warn
    org.springframework.boot.autoconfigure: warn
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /tmp/wanli-backend-production.log
    max-size: 100MB
    max-history: 30

# Railway特定配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# 环境标识
app:
  environment: production
  version: ${APP_VERSION:1.0.0}
  railway:
    deployment: true

# 安全配置
security:
  require-ssl: false
  headers:
    frame-options: DENY
    content-type-options: nosniff
    xss-protection: 1; mode=block