# Staging Environment Configuration
spring:
  profiles:
    active: staging
  
  # Database Configuration for Railway PostgreSQL
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/wanli_staging}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    
  # Redis Configuration (if needed)
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    
# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
    
# JWT Configuration
jwt:
  secret: ${JWT_SECRET:staging-secret-key-change-in-production}
  expiration: 86400000  # 24 hours
  
# Logging Configuration
logging:
  level:
    com.wanli: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/wanli-staging.log
    
# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
      
# Application specific configuration
app:
  name: Wanli Backend
  version: 1.0.0
  environment: staging
  cors:
    allowed-origins: 
      - "https://wanli-frontend-staging.railway.app"
      - "http://localhost:3000"
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    allow-credentials: true